---
swagger: "2.0"
info:
  description: "This **API** is intended to be used as an Internal Backend for applications\
    \ which might need an authentication mechanism. It defines an interface API against\
    \ a **Vault secrets management platform**."
  version: "1.0"
  title: "H2 Auth API Service"
host: "vault.cloud.artofushos.com:8443"
basePath: "/api/v1"
schemes:
- "https"
paths:
  /auth/login/{username}:
    post:
      summary: "Login with the username and password."
      description: "Login with the **username** and **password**."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The username for the user"
        required: true
        type: "string"
      - in: "body"
        name: "password"
        description: "The password for the user."
        required: false
        schema:
          $ref: "#/definitions/password"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              request_id:
                type: "string"
                example: "bea017b2-aedd-67ab-77ab-41a520d1748a"
              lease_id:
                type: "string"
                example: "lease_id"
              renewable:
                type: "boolean"
                example: false
              lease_duration:
                type: "integer"
                example: 0
              data:
                type: "string"
                example: "null"
              wrap_info:
                type: "string"
                example: "null"
              warnings:
                type: "string"
                example: "null"
              auth:
                $ref: "#/definitions/inline_response_200_auth"
        400:
          description: "Bad request"
          schema:
            type: "object"
            properties:
              errors:
                type: "array"
                items:
                  type: "string"
                  example: "invalid username or password"
  /auth/token/lookup-self:
    get:
      summary: "Returns information about the current client token."
      description: "Returns information about the current client token in the header."
      produces:
      - "application/json"
      parameters:
      - name: "X-Hos-Token"
        in: "header"
        description: "The client Token to query."
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              request_id:
                type: "string"
                example: "bea017b2-aedd-67ab-77ab-41a520d1748a"
              lease_id:
                type: "string"
                example: ""
              renewable:
                type: "boolean"
                example: false
              lease_duration:
                type: "integer"
                example: 0
              data:
                $ref: "#/definitions/inline_response_200_1_data"
              wrap_info:
                type: "string"
                example: "null"
              warnings:
                type: "string"
                example: "null"
              auth:
                type: "string"
                example: "null"
        400:
          description: "Bad request"
          schema:
            type: "object"
            properties:
              errors:
                type: "array"
                items:
                  type: "string"
                  example: "missing client token"
        403:
          description: "Permission denied or invalid/ revoked Token"
          schema:
            type: "object"
            properties:
              errors:
                type: "array"
                items:
                  type: "string"
                  example: "permission denied"
definitions:
  inline_response_200_1_data:
    properties:
      accessor:
        type: "string"
        example: "61f50a53-41eb-fd3c-d80f-1ad66025dfb6"
      bound_cidrs:
        type: "string"
        example: ""
      creation_time:
        type: "integer"
        example: 1535446236
      creation_ttl:
        type: "integer"
        example: 86400
      display_name:
        type: "string"
        example: "userpass-test"
      entity_id:
        type: "string"
        example: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
      expire_time:
        type: "string"
        example: "2018-08-29T08:50:36.843075915Z"
      explicit_max_ttl:
        type: "integer"
        example: 0
      id:
        type: "string"
        example: "78e552d9-6389-3cfb-4220-39f537b8f96d"
      issue_time:
        type: "string"
        example: "2018-08-28T08:50:36.843075037Z"
      meta:
        $ref: "#/definitions/inline_response_200_auth_metadata"
      num_uses:
        type: "integer"
        example: 0
      orphan:
        type: "boolean"
        example: true
      path:
        type: "string"
        example: "auth/userpass/login/test"
      policies:
        type: "string"
        example: ""
      renewable:
        type: "boolean"
        example: true
      ttl:
        type: "integer"
        example: 86360
    example:
      creation_time: 1535446236
      creation_ttl: 86400
      bound_cidrs: ""
      accessor: "61f50a53-41eb-fd3c-d80f-1ad66025dfb6"
      policies: ""
      expire_time: "2018-08-29T08:50:36.843075915Z"
      num_uses: 0
      display_name: "userpass-test"
      entity_id: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
      orphan: true
      ttl: 86360
      explicit_max_ttl: 0
      path: "auth/userpass/login/test"
      meta:
        username: "test"
      renewable: true
      id: "78e552d9-6389-3cfb-4220-39f537b8f96d"
      issue_time: "2018-08-28T08:50:36.843075037Z"
  password:
    type: "object"
    required:
    - "password"
    properties:
      password:
        type: "string"
        example: "s3cr3t"
  inline_response_200_auth_metadata:
    properties:
      username:
        type: "string"
        example: "test"
    example:
      username: "test"
  inline_response_200_1:
    properties:
      request_id:
        type: "string"
        example: "bea017b2-aedd-67ab-77ab-41a520d1748a"
      lease_id:
        type: "string"
        example: ""
      renewable:
        type: "boolean"
        example: false
      lease_duration:
        type: "integer"
        example: 0
      data:
        $ref: "#/definitions/inline_response_200_1_data"
      wrap_info:
        type: "string"
        example: "null"
      warnings:
        type: "string"
        example: "null"
      auth:
        type: "string"
        example: "null"
    example:
      data:
        creation_time: 1535446236
        creation_ttl: 86400
        bound_cidrs: ""
        accessor: "61f50a53-41eb-fd3c-d80f-1ad66025dfb6"
        policies: ""
        expire_time: "2018-08-29T08:50:36.843075915Z"
        num_uses: 0
        display_name: "userpass-test"
        entity_id: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
        orphan: true
        ttl: 86360
        explicit_max_ttl: 0
        path: "auth/userpass/login/test"
        meta:
          username: "test"
        renewable: true
        id: "78e552d9-6389-3cfb-4220-39f537b8f96d"
        issue_time: "2018-08-28T08:50:36.843075037Z"
      auth: "null"
      renewable: false
      warnings: "null"
      lease_duration: 0
      request_id: "bea017b2-aedd-67ab-77ab-41a520d1748a"
      lease_id: ""
      wrap_info: "null"
  inline_response_200:
    properties:
      request_id:
        type: "string"
        example: "bea017b2-aedd-67ab-77ab-41a520d1748a"
      lease_id:
        type: "string"
        example: "lease_id"
      renewable:
        type: "boolean"
        example: false
      lease_duration:
        type: "integer"
        example: 0
      data:
        type: "string"
        example: "null"
      wrap_info:
        type: "string"
        example: "null"
      warnings:
        type: "string"
        example: "null"
      auth:
        $ref: "#/definitions/inline_response_200_auth"
    example:
      data: "null"
      auth:
        token_policies:
        - "default"
        - "default"
        client_token: "1119c879-0647-2ca4-a5fa-fb60a77f98a8"
        metadata:
          username: "test"
        renewable: true
        accessor: "380d5925-f6df-dbb8-1e5b-9303d033aedd"
        policies:
        - "default"
        - "default"
        lease_duration: 86400
        entity_id: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
      renewable: false
      warnings: "null"
      lease_duration: 0
      request_id: "bea017b2-aedd-67ab-77ab-41a520d1748a"
      lease_id: "lease_id"
      wrap_info: "null"
  inline_response_200_auth:
    properties:
      client_token:
        type: "string"
        example: "1119c879-0647-2ca4-a5fa-fb60a77f98a8"
        description: "Token received upon authentication success"
      accessor:
        type: "string"
        example: "380d5925-f6df-dbb8-1e5b-9303d033aedd"
      policies:
        type: "array"
        description: "String for the policy or a list/ array of policies."
        items:
          type: "string"
          example: "default"
      token_policies:
        type: "array"
        items:
          type: "string"
          example: "default"
      metadata:
        $ref: "#/definitions/inline_response_200_auth_metadata"
      lease_duration:
        type: "integer"
        example: 86400
      renewable:
        type: "boolean"
        example: true
      entity_id:
        type: "string"
        example: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
    example:
      token_policies:
      - "default"
      - "default"
      client_token: "1119c879-0647-2ca4-a5fa-fb60a77f98a8"
      metadata:
        username: "test"
      renewable: true
      accessor: "380d5925-f6df-dbb8-1e5b-9303d033aedd"
      policies:
      - "default"
      - "default"
      lease_duration: 86400
      entity_id: "61d3a52a-d431-3feb-0e81-ff5ef9cab43f"
  inline_response_403:
    properties:
      errors:
        type: "array"
        items:
          type: "string"
          example: "permission denied"
  inline_response_400:
    properties:
      errors:
        type: "array"
        items:
          type: "string"
          example: "invalid username or password"
  inline_response_400_1:
    properties:
      errors:
        type: "array"
        items:
          type: "string"
          example: "missing client token"
