---
swagger: "2.0"
info:
  description: "Mouth service that allow to access stream data from cameras"
  version: "2.0"
  title: "Mouth"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/aouHOS/HOS-mouth/1.0.0"
tags:
- name: "observations"
  description: "Provide a stream of events with OUT topic data"
schemes:
- "https"
- "http"
paths:
  /v2/observations:
    post:
      tags:
      - "observations"
      summary: "Provide a stream of events with raw data from OUT topic"
      parameters: []
      responses:
        200:
          description: "A successful operation returns status code 200 (OK)."
          examples:
            application/json:
              schema:
                oneOf:
                - $ref: "#/definitions/streamSample1"
                - $ref: "#/definitions/streamSample2"
                - $ref: "#/definitions/streamSample3"
              examples:
                Person Presence:
                  channel: 80
                  sensors:
                  - sensor: 1
                    observs:
                    - serv: "presence"
                      observ: "arrive"
                      objId: 347343
                      objType: "person"
                      time: 20349820395802
                      loc:
                      - locType: "coord"
                        x: 465
                        y: 875
                        w: 78
                        h: 102
                    - serv: "id"
                      observ: "pic"
                      objId: 347343
                      objType: "person"
                      time: 20349820395802
                      conf: 97.515125121
                      personId: 78921
                      pic: "e415c5b3-5bbe-4a8a-bae9-b0124dfab222"
                    - serv: "presence"
                      observ: "present"
                      objId: 347343
                      objType: "person"
                      time: 20349820395802
                      conf: 97.515125121
                      personId: 78921
                      loc:
                      - locType: "coord"
                        x: 465
                        y: 875
                        w: 78
                        h: 102
                    - serv: "presence"
                      observ: "leave"
                      objId: 347343
                      objType: "person"
                      time: 20349820395802
                      loc:
                      - locType: "coord"
                        x: 465
                        y: 875
                        w: 78
                        h: 102
        400:
          description: "An invalid operation returns status code 400 (Bad Request)."
definitions:
  streamSample1:
    type: "object"
    properties:
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/streamSample1_sensors"
  streamSample2:
    type: "object"
    properties:
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/streamSample2_sensors"
  streamSample3:
    type: "object"
    properties:
      channel:
        type: "string"
        description: "Channel ID"
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/streamSample3_sensors"
  streamSample1_observs:
    properties:
      objType:
        type: "string"
        enum:
        - "person"
      figure:
        type: "string"
        enum:
        - "upper"
      sTime:
        type: "integer"
        description: "frame time in millisecond"
      streamDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.382Z"
      obsDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.254Z"
      objId:
        type: "integer"
        description: "Camera tracking id."
      loc:
        type: "array"
        description: "array with locations"
        items:
          type: "object"
          properties: {}
      serv:
        type: "string"
        enum:
        - "presence"
        - "id"
      observ:
        type: "string"
        description: "Event type"
      time:
        type: "integer"
        description: "Unix timestamp"
      conf:
        type: "number"
        description: "FR service score"
      pic:
        type: "string"
        description: "link to image"
  streamSample1_sensors:
    properties:
      sensor:
        type: "string"
        description: "Camera name"
      observs:
        type: "array"
        items:
          $ref: "#/definitions/streamSample1_observs"
  streamSample2_observs:
    properties:
      objType:
        type: "string"
        enum:
        - "person"
      sTime:
        type: "integer"
        description: "frame time in millisecond"
      streamDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.382Z"
      obsDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.254Z"
      objId:
        type: "integer"
        description: "Camera tracking id."
      loc:
        type: "array"
        description: "array with locations"
        items:
          type: "object"
          properties: {}
      serv:
        type: "string"
        enum:
        - "presence"
        - "id"
      observ:
        type: "string"
        description: "Event type"
  streamSample2_sensors:
    properties:
      sensor:
        type: "string"
        description: "Camera name"
      observs:
        type: "array"
        items:
          $ref: "#/definitions/streamSample2_observs"
  streamSample3_observs:
    properties:
      objType:
        type: "string"
        enum:
        - "person"
      sTime:
        type: "integer"
        description: "frame time in millisecond"
      streamDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.382Z"
      obsDateTime:
        type: "string"
        description: "2018-03-29T10:41:15.254Z"
      objId:
        type: "integer"
        description: "Camera tracking id."
      loc:
        type: "array"
        description: "array with locations"
        items:
          type: "object"
          properties: {}
      serv:
        type: "string"
        enum:
        - "presence"
        - "id"
      observ:
        type: "string"
        description: "Event type"
      pic:
        type: "string"
        description: "image ID"
      picQual:
        type: "integer"
        description: "quality of the image after FR"
  streamSample3_sensors:
    properties:
      sensor:
        type: "string"
        description: "Camera name"
      observs:
        type: "array"
        items:
          $ref: "#/definitions/streamSample3_observs"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
